const queue = [[28, 34, 74, 86, 76, 32, 30, 0], [0, 0, 56, 4, 60, 68, 58, 0], [64, 64, 92, 98, 66, 98, 92, 0], [0, 0, 60, 66, 64, 66, 60, 0], [2, 2, 58, 70, 66, 70, 58, 0], [0, 0, 60, 66, 126, 64, 60, 0], [12, 18, 16, 124, 16, 16, 16, 0], [0, 0, 58, 70, 70, 58, 2, 60], [64, 64, 92, 98, 66, 66, 66, 0], [8, 0, 24, 8, 8, 8, 28, 0], [4, 0, 12, 4, 4, 4, 68, 56], [64, 64, 68, 72, 80, 104, 68, 0], [24, 8, 8, 8, 8, 8, 28, 0], [0, 0, 118, 73, 73, 73, 73, 0], [0, 0, 92, 98, 66, 66, 66, 0], [0, 0, 60, 66, 66, 66, 60, 0], [0, 0, 92, 98, 98, 92, 64, 64], [0, 0, 58, 70, 70, 58, 2, 2], [0, 0, 92, 98, 64, 64, 64, 0], [0, 0, 62, 64, 60, 2, 124, 0], [16, 16, 124, 16, 16, 18, 12, 0], [0, 0, 66, 66, 66, 70, 58, 0], [0, 0, 66, 66, 66, 36, 24, 0], [0, 0, 65, 73, 73, 73, 54, 0], [0, 0, 66, 36, 24, 36, 66, 0], [0, 0, 66, 66, 70, 58, 2, 60], [0, 0, 126, 4, 24, 32, 126, 0], [60, 32, 32, 32, 32, 32, 60, 0], [0, 64, 32, 16, 8, 4, 2, 0], [60, 4, 4, 4, 4, 4, 60, 0], [0, 8, 28, 42, 8, 8, 8, 8], [0, 0, 16, 32, 127, 32, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8, 0, 0, 8, 0], [36, 36, 36, 0, 0, 0, 0, 0], [36, 36, 126, 36, 126, 36, 36, 0], [8, 30, 40, 28, 10, 60, 8, 0], [0, 98, 100, 8, 16, 38, 70, 0], [48, 72, 72, 48, 74, 68, 58, 0], [4, 8, 16, 0, 0, 0, 0, 0], [4, 8, 16, 16, 16, 8, 4, 0], [32, 16, 8, 8, 8, 16, 32, 0], [8, 42, 28, 62, 28, 42, 8, 0], [0, 8, 8, 62, 8, 8, 0, 0], [0, 0, 0, 0, 0, 8, 8, 16], [0, 0, 0, 126, 0, 0, 0, 0], [0, 0, 0, 0, 0, 24, 24, 0], [0, 2, 4, 8, 16, 32, 64, 0], [60, 66, 70, 90, 98, 66, 60, 0], [8, 24, 40, 8, 8, 8, 62, 0], [60, 66, 2, 12, 48, 64, 126, 0], [60, 66, 2, 28, 2, 66, 60, 0], [4, 12, 20, 36, 126, 4, 4, 0], [126, 64, 120, 4, 2, 68, 56, 0], [28, 32, 64, 124, 66, 66, 60, 0], [126, 66, 4, 8, 16, 16, 16, 0], [60, 66, 66, 60, 66, 66, 60, 0], [60, 66, 66, 62, 2, 4, 56, 0], [0, 0, 8, 0, 0, 8, 0, 0], [0, 0, 8, 0, 0, 8, 8, 16], [14, 24, 48, 96, 48, 24, 14, 0], [0, 0, 126, 0, 126, 0, 0, 0], [112, 24, 12, 6, 12, 24, 112, 0], [60, 66, 2, 12, 16, 0, 16, 0], [0, 0, 0, 0, 255, 0, 0, 0], [24, 36, 66, 126, 66, 66, 66, 0], [124, 34, 34, 60, 34, 34, 124, 0], [28, 34, 64, 64, 64, 34, 28, 0], [120, 36, 34, 34, 34, 36, 120, 0], [126, 64, 64, 120, 64, 64, 126, 0], [126, 64, 64, 120, 64, 64, 64, 0], [28, 34, 64, 78, 66, 34, 28, 0], [66, 66, 66, 126, 66, 66, 66, 0], [28, 8, 8, 8, 8, 8, 28, 0], [14, 4, 4, 4, 4, 68, 56, 0], [66, 68, 72, 112, 72, 68, 66, 0], [64, 64, 64, 64, 64, 64, 126, 0], [66, 102, 90, 90, 66, 66, 66, 0], [66, 98, 82, 74, 70, 66, 66, 0], [24, 36, 66, 66, 66, 36, 24, 0], [124, 66, 66, 124, 64, 64, 64, 0], [24, 36, 66, 66, 74, 36, 26, 0], [124, 66, 66, 124, 72, 68, 66, 0], [60, 66, 64, 60, 2, 66, 60, 0], [62, 8, 8, 8, 8, 8, 8, 0], [66, 66, 66, 66, 66, 66, 60, 0], [66, 66, 66, 36, 36, 24, 24, 0], [66, 66, 66, 90, 90, 102, 66, 0], [66, 66, 36, 24, 36, 66, 66, 0], [34, 34, 34, 28, 8, 8, 8, 0], [126, 2, 4, 24, 32, 64, 126, 0], [8, 8, 8, 8, 255, 8, 8, 8], [160, 80, 160, 80, 160, 80, 160, 80], [8, 8, 8, 8, 8, 8, 8, 8], [204, 204, 51, 51, 204, 204, 51, 51], [204, 102, 51, 153, 204, 102, 51, 153], [0, 0, 0, 0, 0, 0, 0, 0], [240, 240, 240, 240, 240, 240, 240, 240], [0, 0, 0, 0, 255, 255, 255, 255], [255, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 255], [128, 128, 128, 128, 128, 128, 128, 128], [170, 85, 170, 85, 170, 85, 170, 85], [1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 170, 85, 170, 85], [153, 51, 102, 204, 153, 51, 102, 204], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8, 8, 8, 15, 8, 8, 8], [0, 0, 0, 0, 15, 15, 15, 15], [8, 8, 8, 8, 15, 0, 0, 0], [0, 0, 0, 0, 248, 8, 8, 8], [0, 0, 0, 0, 0, 0, 255, 255], [0, 0, 0, 0, 15, 8, 8, 8], [8, 8, 8, 8, 255, 0, 0, 0], [0, 0, 0, 0, 255, 8, 8, 8], [8, 8, 8, 8, 248, 8, 8, 8], [192, 192, 192, 192, 192, 192, 192, 192], [224, 224, 224, 224, 224, 224, 224, 224], [7, 7, 7, 7, 7, 7, 7, 7], [255, 255, 0, 0, 0, 0, 0, 0], [255, 255, 255, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 255, 255, 255], [1, 2, 68, 72, 80, 96, 64, 0], [0, 0, 0, 0, 240, 240, 240, 240], [15, 15, 15, 15, 0, 0, 0, 0], [8, 8, 8, 8, 248, 0, 0, 0], [240, 240, 240, 240, 0, 0, 0, 0], [240, 240, 240, 240, 15, 15, 15, 15], [227, 221, 181, 169, 179, 223, 225, 255], [255, 255, 199, 251, 195, 187, 197, 255], [191, 191, 163, 157, 189, 157, 163, 255], [255, 255, 195, 189, 191, 189, 195, 255], [253, 253, 197, 185, 189, 185, 197, 255], [255, 255, 195, 189, 129, 191, 195, 255], [243, 237, 239, 131, 239, 239, 239, 255], [255, 255, 197, 185, 185, 197, 253, 195], [191, 191, 163, 157, 189, 189, 189, 255], [247, 255, 231, 247, 247, 247, 227, 255], [251, 255, 243, 251, 251, 251, 187, 199], [191, 191, 187, 183, 175, 151, 187, 255], [231, 247, 247, 247, 247, 247, 227, 255], [255, 255, 137, 182, 182, 182, 182, 255], [255, 255, 163, 157, 189, 189, 189, 255], [255, 255, 195, 189, 189, 189, 195, 255], [255, 255, 163, 157, 157, 163, 191, 191], [255, 255, 197, 185, 185, 197, 253, 253], [255, 255, 163, 157, 191, 191, 191, 255], [255, 255, 193, 191, 195, 253, 131, 255], [239, 239, 131, 239, 239, 237, 243, 255], [255, 255, 189, 189, 189, 185, 197, 255], [255, 255, 189, 189, 189, 219, 231, 255], [255, 255, 190, 182, 182, 182, 201, 255], [255, 255, 189, 219, 231, 219, 189, 255], [255, 255, 189, 189, 185, 197, 253, 195], [255, 255, 129, 251, 231, 223, 129, 255], [195, 223, 223, 223, 223, 223, 195, 255], [255, 191, 223, 239, 247, 251, 253, 255], [195, 251, 251, 251, 251, 251, 195, 255], [255, 247, 227, 213, 247, 247, 247, 247], [255, 255, 239, 223, 128, 223, 239, 255], [255, 255, 255, 255, 255, 255, 255, 255], [247, 247, 247, 247, 255, 255, 247, 255], [219, 219, 219, 255, 255, 255, 255, 255], [219, 219, 129, 219, 129, 219, 219, 255], [247, 225, 215, 227, 245, 195, 247, 255], [255, 157, 155, 247, 239, 217, 185, 255], [207, 183, 183, 207, 181, 187, 197, 255], [251, 247, 239, 255, 255, 255, 255, 255], [251, 247, 239, 239, 239, 247, 251, 255], [223, 239, 247, 247, 247, 239, 223, 255], [247, 213, 227, 193, 227, 213, 247, 255], [255, 247, 247, 193, 247, 247, 255, 255], [255, 255, 255, 255, 255, 247, 247, 239], [255, 255, 255, 129, 255, 255, 255, 255], [255, 255, 255, 255, 255, 231, 231, 255], [255, 253, 251, 247, 239, 223, 191, 255], [195, 189, 185, 165, 157, 189, 195, 255], [247, 231, 215, 247, 247, 247, 193, 255], [195, 189, 253, 243, 207, 191, 129, 255], [195, 189, 253, 227, 253, 189, 195, 255], [251, 243, 235, 219, 129, 251, 251, 255], [129, 191, 135, 251, 253, 187, 199, 255], [227, 223, 191, 131, 189, 189, 195, 255], [129, 189, 251, 247, 239, 239, 239, 255], [195, 189, 189, 195, 189, 189, 195, 255], [195, 189, 189, 193, 253, 251, 199, 255], [255, 255, 247, 255, 255, 247, 255, 255], [255, 255, 247, 255, 255, 247, 247, 239], [241, 231, 207, 159, 207, 231, 241, 255], [255, 255, 129, 255, 129, 255, 255, 255], [143, 231, 243, 249, 243, 231, 143, 255], [195, 189, 253, 243, 239, 255, 239, 255], [255, 255, 255, 255, 0, 255, 255, 255], [231, 219, 189, 129, 189, 189, 189, 255], [131, 221, 221, 195, 221, 221, 131, 255], [227, 221, 191, 191, 191, 221, 227, 255], [135, 219, 221, 221, 221, 219, 135, 255], [129, 191, 191, 135, 191, 191, 129, 255], [129, 191, 191, 135, 191, 191, 191, 255], [227, 221, 191, 177, 189, 221, 227, 255], [189, 189, 189, 129, 189, 189, 189, 255], [227, 247, 247, 247, 247, 247, 227, 255], [241, 251, 251, 251, 251, 187, 199, 255], [189, 187, 183, 143, 183, 187, 189, 255], [191, 191, 191, 191, 191, 191, 129, 255], [189, 153, 165, 165, 189, 189, 189, 255], [189, 157, 173, 181, 185, 189, 189, 255], [231, 219, 189, 189, 189, 219, 231, 255], [131, 189, 189, 131, 191, 191, 191, 255], [231, 219, 189, 189, 181, 219, 229, 255], [131, 189, 189, 131, 183, 187, 189, 255], [195, 189, 191, 195, 253, 189, 195, 255], [193, 247, 247, 247, 247, 247, 247, 255], [189, 189, 189, 189, 189, 189, 195, 255], [189, 189, 189, 219, 219, 231, 231, 255], [189, 189, 189, 165, 165, 153, 189, 255], [189, 189, 219, 231, 219, 189, 189, 255], [221, 221, 221, 227, 247, 247, 247, 255], [129, 253, 251, 231, 223, 191, 129, 255], [247, 247, 247, 247, 0, 247, 247, 247], [95, 175, 95, 175, 95, 175, 95, 175], [247, 247, 247, 247, 247, 247, 247, 247], [51, 51, 204, 204, 51, 51, 204, 204], [51, 153, 204, 102, 51, 153, 204, 102], [255, 255, 255, 255, 255, 255, 255, 255], [15, 15, 15, 15, 15, 15, 15, 15], [255, 255, 255, 255, 0, 0, 0, 0], [0, 255, 255, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 255, 255, 0], [127, 127, 127, 127, 127, 127, 127, 127], [85, 170, 85, 170, 85, 170, 85, 170], [254, 254, 254, 254, 254, 254, 254, 254], [255, 255, 255, 255, 85, 170, 85, 170], [102, 204, 153, 51, 102, 204, 153, 51], [252, 252, 252, 252, 252, 252, 252, 252], [247, 247, 247, 247, 240, 247, 247, 247], [255, 255, 255, 255, 240, 240, 240, 240], [247, 247, 247, 247, 240, 255, 255, 255], [255, 255, 255, 255, 7, 247, 247, 247], [255, 255, 255, 255, 255, 255, 0, 0], [255, 255, 255, 255, 240, 247, 247, 247], [247, 247, 247, 247, 0, 255, 255, 255], [255, 255, 255, 255, 0, 247, 247, 247], [247, 247, 247, 247, 7, 247, 247, 247], [63, 63, 63, 63, 63, 63, 63, 63], [31, 31, 31, 31, 31, 31, 31, 31], [248, 248, 248, 248, 248, 248, 248, 248], [0, 0, 255, 255, 255, 255, 255, 255], [0, 0, 0, 255, 255, 255, 255, 255], [255, 255, 255, 255, 255, 0, 0, 0], [254, 253, 187, 183, 175, 159, 191, 255], [255, 255, 255, 255, 15, 15, 15, 15], [240, 240, 240, 240, 255, 255, 255, 255], [247, 247, 247, 247, 7, 255, 255, 255], [15, 15, 15, 15, 255, 255, 255, 255], [15, 15, 15, 15, 240, 240, 240, 240]]


var boxes = document.getElementsByClassName("boxes");

var isMouseDown = false;
var setTo = true;

var width = 5;
setSize();

xprt();
document.addEventListener("mouseup", () =>    { isMouseDown = false; })
document.addEventListener("mouseleave", () => { isMouseDown = false; })

for (var box of boxes) {
  box.addEventListener("mousemove", function() {
    if (isMouseDown) setBox.call(this);
  });

  box.addEventListener("mousedown", function() {
    isMouseDown = true;
    setTo = !this.classList.contains("active");
    setBox.call(this);
  });
}

function setBox() {
  const oldC = this.classList.contains("active");
  if (setTo) this.classList.add("active");
  else this.classList.remove("active");

  if (oldC != this.classList.contains("active")) xprt();
}

function xprt() {
  // var out = "[" + "\n";
  // for (var i = 0; i < boxes.length; i += 5) {
  //   out += "\t\"";
  //   for (var j = 0; j < 5; j++) {
  //     out += boxes[i+j].classList.contains("active") ? "|" : " ";
  //   }
  //   out += "\"" + ((i+5 < boxes.length) ? "," : "") + "\n";
  // }
  // out += "]";
  
  var outArr = [];
  for (let i = 0; i < boxes.length; i += width) {
    let outLine = "";
    for (let j = 0; j < width; j++) { outLine += boxes[i+j].classList.contains("active") ? "|" : " "; }
    outArr.push(outLine);
  }

  var trimmed = false;
  for (let i = outArr.length-1; i >= 0; i--) {
    if (outArr[i].trim().length != 0) {
      outArr.splice(i+1, outArr.length-1-i);
      trimmed = true;
      break;
    }
  }
  if (!trimmed) { outArr = []; }
  let outTxt = "";
  for (let i in outArr) {
    outTxt += "\t\"" + outArr[i] + "\",\n";
  }
  let out = "[\n" + outTxt.replace(/,\n$/g, "\n") + "]";

  document.getElementById("output").value = out;
  document.getElementById("inlineOutput").value = out.replace(/[\t\n]/g, "") + ",";
}

document.getElementById("output").addEventListener("click", function() { copyToClipboard(this); });
document.getElementById("inlineOutput").addEventListener("click", function() { copyToClipboard(this); });

document.body.addEventListener("keydown", (event) => {
  if (event.ctrlKey && event.keyCode == 83) {
    event.preventDefault();
    copyToClipboard(document.getElementById("output"));
  }
});

function copyToClipboard(txt) {
  txt.select();
  txt.setSelectionRange(0,999999999999);
  
  navigator.clipboard.writeText(txt.value);
}

function setSize() {
  const size = window.location.search.substring(1).split("x");
  
  const x = isNaN(parseInt(size[0])) ? 5 : parseInt(size[0]);
  const y = isNaN(parseInt(size[1])) ? 10 : parseInt(size[1]);

  for (let i = 0; i < y; i++) {
    const parent = document.createElement("div");
    for (let j = 0; j < x; j++) {
      const box = document.createElement("div");
      box.classList.add("boxes");
      if (i == y-1) box.classList.add("bottoms");
      parent.appendChild(box);
    }
    document.getElementById("box-holders").appendChild(parent);
  }

  width = x;
}

document.getElementById("inlineOutput").addEventListener("input", setBitmap);
document.getElementById("output").addEventListener("input", setBitmap);

document.getElementById("inlineOutput").addEventListener("blur", cleanOutput);
document.getElementById("output").addEventListener("blur", cleanOutput);

function setBitmap() {
  var value = this.value;
  if (this.value[this.value.length-1] == ",") { value = this.value.substring(0, this.value.length-1); }
  try {
    const data = JSON.parse(value);

    // is array of strings
    if (Array.isArray(data) && typeof data[0] == "string") setBitmapString(data);
    if (Array.isArray(data) && typeof data[0] == "number") setBitmapNumber(data);
  }
  catch(err) {}
}

function cleanOutput() {
  if (dataSet) xprt();
}

var dataSet = false;
function setBitmapString(data) {
  const children = document.getElementById("box-holders").children;
  for (let i = 0; i < children.length; i++) {
    for (let j = 0; j < width; j++) {
      const box = children[i].children[j];
      if (data.length > i && data[i].length > j && data[i][j] != " ") box.classList.add("active");
      else box.classList.remove("active");
    }
  }
  dataSet = true;
}

function setBitmapNumber(data) {
  const children = document.getElementById("box-holders").children;
  const newData = [];
  for (let i = 0; i < children.length; i++) {
    let string = "";
    for (let j = width-1; j >= 0; j--) {
      if (data.length > i && 2 ** j <= data[i]) {
        data[i] -= 2 ** j;
        string += "|"
      }
      else string += " ";
    }
    newData.push(string);
  }
  setBitmapString(newData);
}

window.addEventListener("keydown", (e) => {
  if (e.ctrlKey ** e.key == "v") {
    navigator.clipboard.readText().then(txt => {
      setBitmap.call({
        value: txt
      });
      cleanOutput();
    });
  }
  if (e.key == "q" && queueI < queue.length) {
    e.preventDefault();
    ittQueue();
  }
});

var queueI = 0;
function ittQueue() {
  document.getElementById("queueCt").innerText = queueI;
  setBitmap.call({
    value: JSON.stringify(queue[queueI++])
  });
  cleanOutput();

  copyToClipboard(document.getElementById("inlineOutput"));
}